# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T09:50:38+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class ArrayJobDependency(Enum):
    N_TO_N = 'N_TO_N'
    SEQUENTIAL = 'SEQUENTIAL'


class AssignPublicIp(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Boolean(RootModel[bool]):
    root: bool


class CEState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class CEStatus(Enum):
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    VALID = 'VALID'
    INVALID = 'INVALID'


class CEType(Enum):
    MANAGED = 'MANAGED'
    UNMANAGED = 'UNMANAGED'


class CRAllocationStrategy(Enum):
    BEST_FIT = 'BEST_FIT'
    BEST_FIT_PROGRESSIVE = 'BEST_FIT_PROGRESSIVE'
    SPOT_CAPACITY_OPTIMIZED = 'SPOT_CAPACITY_OPTIMIZED'


class CRType(Enum):
    EC2 = 'EC2'
    SPOT = 'SPOT'
    FARGATE = 'FARGATE'
    FARGATE_SPOT = 'FARGATE_SPOT'


class CRUpdateAllocationStrategy(Enum):
    BEST_FIT_PROGRESSIVE = 'BEST_FIT_PROGRESSIVE'
    SPOT_CAPACITY_OPTIMIZED = 'SPOT_CAPACITY_OPTIMIZED'


class CancelJobResponse(BaseModel):
    pass


class ClientException(RootModel[Any]):
    root: Any


class DeleteComputeEnvironmentResponse(BaseModel):
    pass


class DeleteJobQueueResponse(BaseModel):
    pass


class DeleteSchedulingPolicyResponse(BaseModel):
    pass


class DeregisterJobDefinitionResponse(BaseModel):
    pass


class DeviceCgroupPermission(Enum):
    READ = 'READ'
    WRITE = 'WRITE'
    MKNOD = 'MKNOD'


class DeviceCgroupPermissions(RootModel[List[DeviceCgroupPermission]]):
    root: List[DeviceCgroupPermission]


class EFSAuthorizationConfigIAM(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class EFSTransitEncryption(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Float(RootModel[float]):
    root: float


class ImageIdOverride(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class ImageType(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class Integer(RootModel[int]):
    root: int


class JQState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class JQStatus(Enum):
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    VALID = 'VALID'
    INVALID = 'INVALID'


class JobDefinitionType(Enum):
    container = 'container'
    multinode = 'multinode'


class JobExecutionTimeoutMinutes(RootModel[conint(ge=1, le=360)]):
    root: conint(ge=1, le=360)


class JobStatus(Enum):
    SUBMITTED = 'SUBMITTED'
    PENDING = 'PENDING'
    RUNNABLE = 'RUNNABLE'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class JobTimeout(BaseModel):
    attemptDurationSeconds: Optional[Integer] = None


class KubernetesVersion(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class ListTagsForResourceRequest(BaseModel):
    pass


class LogDriver(Enum):
    json_file = 'json-file'
    syslog = 'syslog'
    journald = 'journald'
    gelf = 'gelf'
    fluentd = 'fluentd'
    awslogs = 'awslogs'
    splunk = 'splunk'


class Long(RootModel[int]):
    root: int


class NetworkConfiguration(BaseModel):
    assignPublicIp: Optional[AssignPublicIp] = None


class NodeDetails(BaseModel):
    isMainNode: Optional[Boolean] = None
    nodeIndex: Optional[Integer] = None


class NodePropertiesSummary(BaseModel):
    isMainNode: Optional[Boolean] = None
    nodeIndex: Optional[Integer] = None
    numNodes: Optional[Integer] = None


class OrchestrationType(Enum):
    ECS = 'ECS'
    EKS = 'EKS'


class PlatformCapability(Enum):
    EC2 = 'EC2'
    FARGATE = 'FARGATE'


class PlatformCapabilityList(RootModel[List[PlatformCapability]]):
    root: List[PlatformCapability]


class Quantity(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class ResourceType(Enum):
    GPU = 'GPU'
    VCPU = 'VCPU'
    MEMORY = 'MEMORY'


class RetryAction(Enum):
    RETRY = 'RETRY'
    EXIT = 'EXIT'


class ServerException(RootModel[Any]):
    root: Any


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class SubmitJobResponse(BaseModel):
    jobArn: Optional[String] = None
    jobId: String
    jobName: String


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagKeysList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=1)


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[constr(max_length=256)]):
    root: constr(max_length=256)


class TagrisTagsMap(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class TagsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class TerminateJobRequest(BaseModel):
    jobId: String
    reason: String


class TerminateJobResponse(BaseModel):
    pass


class Tmpfs(BaseModel):
    containerPath: String
    mountOptions: Optional[StringList] = None
    size: Integer


class TmpfsList(RootModel[List[Tmpfs]]):
    root: List[Tmpfs]


class Ulimit(BaseModel):
    hardLimit: Integer
    name: String
    softLimit: Integer


class Ulimits(RootModel[List[Ulimit]]):
    root: List[Ulimit]


class UntagResourceRequest(BaseModel):
    pass


class UntagResourceResponse(BaseModel):
    pass


class UpdateComputeEnvironmentResponse(BaseModel):
    computeEnvironmentArn: Optional[String] = None
    computeEnvironmentName: Optional[String] = None


class UpdateJobQueueResponse(BaseModel):
    jobQueueArn: Optional[String] = None
    jobQueueName: Optional[String] = None


class UpdatePolicy(BaseModel):
    jobExecutionTimeoutMinutes: Optional[JobExecutionTimeoutMinutes] = None
    terminateJobsOnUpdate: Optional[Boolean] = None


class UpdateSchedulingPolicyResponse(BaseModel):
    pass


class V1CanceljobPostRequest(BaseModel):
    jobId: str = Field(..., description='The Batch job ID of the job to cancel.')
    reason: str = Field(
        ...,
        description='A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the Batch activity logs.',
    )


class EksConfiguration1(BaseModel):
    eksClusterArn: Optional[String] = None
    kubernetesNamespace: Optional[String] = None


class State(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Type(Enum):
    MANAGED = 'MANAGED'
    UNMANAGED = 'UNMANAGED'


class V1DeletecomputeenvironmentPostRequest(BaseModel):
    computeEnvironment: str = Field(
        ...,
        description='The name or Amazon Resource Name (ARN) of the compute environment to delete.',
    )


class V1DeletejobqueuePostRequest(BaseModel):
    jobQueue: str = Field(
        ...,
        description='The short name or full Amazon Resource Name (ARN) of the queue to delete.',
    )


class V1DeleteschedulingpolicyPostRequest(BaseModel):
    arn: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the scheduling policy to delete.',
    )


class V1DeregisterjobdefinitionPostRequest(BaseModel):
    jobDefinition: str = Field(
        ...,
        description='The name and revision (<code>name:revision</code>) or full Amazon Resource Name (ARN) of the job definition to deregister.',
    )


class V1DescribecomputeenvironmentsPostRequest(BaseModel):
    computeEnvironments: Optional[List[String]] = Field(
        None,
        description='A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries.',
    )
    maxResults: Optional[int] = Field(
        None,
        description="The maximum number of cluster results returned by <code>DescribeComputeEnvironments</code> in paginated output. When this parameter is used, <code>DescribeComputeEnvironments</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeComputeEnvironments</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeComputeEnvironments</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
    )
    nextToken: Optional[str] = Field(
        None,
        description="<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeComputeEnvironments</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
    )


class V1DescribejobdefinitionsPostRequest(BaseModel):
    jobDefinitionName: Optional[str] = Field(
        None, description='The name of the job definition to describe.'
    )
    jobDefinitions: Optional[List[String]] = Field(
        None,
        description='A list of up to 100 job definitions. Each entry in the list can either be an ARN in the format <code>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</code> or a short version using the form <code>${JobDefinitionName}:${Revision}</code>.',
    )
    maxResults: Optional[int] = Field(
        None,
        description="The maximum number of results returned by <code>DescribeJobDefinitions</code> in paginated output. When this parameter is used, <code>DescribeJobDefinitions</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeJobDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
    )
    nextToken: Optional[str] = Field(
        None,
        description="<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobDefinitions</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
    )
    status: Optional[str] = Field(
        None, description='The status used to filter job definitions.'
    )


class V1DescribejobqueuesPostRequest(BaseModel):
    jobQueues: Optional[List[String]] = Field(
        None,
        description='A list of up to 100 queue names or full queue Amazon Resource Name (ARN) entries.',
    )
    maxResults: Optional[int] = Field(
        None,
        description="The maximum number of results returned by <code>DescribeJobQueues</code> in paginated output. When this parameter is used, <code>DescribeJobQueues</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobQueues</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeJobQueues</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
    )
    nextToken: Optional[str] = Field(
        None,
        description="<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobQueues</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
    )


class V1DescribejobsPostRequest(BaseModel):
    jobs: List[String] = Field(..., description='A list of up to 100 job IDs.')


class V1DescribeschedulingpoliciesPostRequest(BaseModel):
    arns: List[String] = Field(
        ...,
        description='A list of up to 100 scheduling policy Amazon Resource Name (ARN) entries.',
    )


class V1ListschedulingpoliciesPostRequest(BaseModel):
    maxResults: Optional[int] = Field(
        None,
        description="The maximum number of results that's returned by <code>ListSchedulingPolicies</code> in paginated output. When this parameter is used, <code>ListSchedulingPolicies</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListSchedulingPolicies</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, <code>ListSchedulingPolicies</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
    )
    nextToken: Optional[str] = Field(
        None,
        description="<p>The <code>nextToken</code> value that's returned from a previous paginated <code>ListSchedulingPolicies</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
    )


class Timeout(BaseModel):
    attemptDurationSeconds: Optional[Integer] = None


class Type1(Enum):
    container = 'container'
    multinode = 'multinode'


class ArrayProperties(BaseModel):
    size: Optional[Integer] = None


class V1TagsResourceArnPostRequest(BaseModel):
    tags: Dict[str, TagValue] = Field(
        ...,
        description='The tags that you apply to the resource to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.',
    )


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=1)


class V1TerminatejobPostRequest(BaseModel):
    jobId: str = Field(..., description='The Batch job ID of the job to terminate.')
    reason: str = Field(
        ...,
        description='A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the Batch activity logs.',
    )


class ArrayJobStatusSummary(RootModel[Optional[Dict[str, Integer]]]):
    root: Optional[Dict[str, Integer]] = None


class ArrayPropertiesDetail(BaseModel):
    index: Optional[Integer] = None
    size: Optional[Integer] = None
    statusSummary: Optional[ArrayJobStatusSummary] = None


class ArrayPropertiesSummary(BaseModel):
    index: Optional[Integer] = None
    size: Optional[Integer] = None


class CancelJobRequest(BaseModel):
    jobId: String
    reason: String


class ComputeEnvironmentOrder(BaseModel):
    computeEnvironment: String
    order: Integer


class ComputeEnvironmentOrders(RootModel[List[ComputeEnvironmentOrder]]):
    root: List[ComputeEnvironmentOrder]


class ContainerSummary(BaseModel):
    exitCode: Optional[Integer] = None
    reason: Optional[String] = None


class CreateComputeEnvironmentResponse(BaseModel):
    computeEnvironmentArn: Optional[String] = None
    computeEnvironmentName: Optional[String] = None


class CreateJobQueueRequest(BaseModel):
    computeEnvironmentOrder: ComputeEnvironmentOrders
    jobQueueName: String
    priority: Integer
    schedulingPolicyArn: Optional[String] = None
    state: Optional[JQState] = None
    tags: Optional[TagrisTagsMap] = None


class CreateJobQueueResponse(BaseModel):
    jobQueueArn: String
    jobQueueName: String


class CreateSchedulingPolicyResponse(BaseModel):
    arn: String
    name: String


class DeleteComputeEnvironmentRequest(BaseModel):
    computeEnvironment: String


class DeleteJobQueueRequest(BaseModel):
    jobQueue: String


class DeleteSchedulingPolicyRequest(BaseModel):
    arn: String


class DeregisterJobDefinitionRequest(BaseModel):
    jobDefinition: String


class DescribeComputeEnvironmentsRequest(BaseModel):
    computeEnvironments: Optional[StringList] = None
    maxResults: Optional[Integer] = None
    nextToken: Optional[String] = None


class DescribeJobDefinitionsRequest(BaseModel):
    jobDefinitionName: Optional[String] = None
    jobDefinitions: Optional[StringList] = None
    maxResults: Optional[Integer] = None
    nextToken: Optional[String] = None
    status: Optional[String] = None


class DescribeJobQueuesRequest(BaseModel):
    jobQueues: Optional[StringList] = None
    maxResults: Optional[Integer] = None
    nextToken: Optional[String] = None


class DescribeJobsRequest(BaseModel):
    jobs: StringList


class DescribeSchedulingPoliciesRequest(BaseModel):
    arns: StringList


class Device(BaseModel):
    containerPath: Optional[String] = None
    hostPath: String
    permissions: Optional[DeviceCgroupPermissions] = None


class DevicesList(RootModel[List[Device]]):
    root: List[Device]


class EFSAuthorizationConfig(BaseModel):
    accessPointId: Optional[String] = None
    iam: Optional[EFSAuthorizationConfigIAM] = None


class EFSVolumeConfiguration(BaseModel):
    authorizationConfig: Optional[EFSAuthorizationConfig] = None
    fileSystemId: String
    rootDirectory: Optional[String] = None
    transitEncryption: Optional[EFSTransitEncryption] = None
    transitEncryptionPort: Optional[Integer] = None


class Ec2Configuration(BaseModel):
    imageIdOverride: Optional[ImageIdOverride] = None
    imageKubernetesVersion: Optional[KubernetesVersion] = None
    imageType: ImageType


class Ec2ConfigurationList(RootModel[List[Ec2Configuration]]):
    root: List[Ec2Configuration]


class EksAttemptContainerDetail(BaseModel):
    exitCode: Optional[Integer] = None
    reason: Optional[String] = None


class EksAttemptContainerDetails(RootModel[List[EksAttemptContainerDetail]]):
    root: List[EksAttemptContainerDetail]


class EksAttemptDetail(BaseModel):
    containers: Optional[EksAttemptContainerDetails] = None
    nodeName: Optional[String] = None
    podName: Optional[String] = None
    startedAt: Optional[Long] = None
    statusReason: Optional[String] = None
    stoppedAt: Optional[Long] = None


class EksAttemptDetails(RootModel[List[EksAttemptDetail]]):
    root: List[EksAttemptDetail]


class EksConfiguration(BaseModel):
    eksClusterArn: String
    kubernetesNamespace: String


class EksContainerEnvironmentVariable(BaseModel):
    name: String
    value: Optional[String] = None


class EksContainerEnvironmentVariables(
    RootModel[List[EksContainerEnvironmentVariable]]
):
    root: List[EksContainerEnvironmentVariable]


class EksContainerSecurityContext(BaseModel):
    privileged: Optional[Boolean] = None
    readOnlyRootFilesystem: Optional[Boolean] = None
    runAsGroup: Optional[Long] = None
    runAsNonRoot: Optional[Boolean] = None
    runAsUser: Optional[Long] = None


class EksContainerVolumeMount(BaseModel):
    mountPath: Optional[String] = None
    name: Optional[String] = None
    readOnly: Optional[Boolean] = None


class EksContainerVolumeMounts(RootModel[List[EksContainerVolumeMount]]):
    root: List[EksContainerVolumeMount]


class EksEmptyDir(BaseModel):
    medium: Optional[String] = None
    sizeLimit: Optional[Quantity] = None


class EksHostPath(BaseModel):
    path: Optional[String] = None


class EksLabelsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class EksLimits(RootModel[Optional[Dict[str, Quantity]]]):
    root: Optional[Dict[str, Quantity]] = None


class EksMetadata(BaseModel):
    labels: Optional[EksLabelsMap] = None


class EksRequests(RootModel[Optional[Dict[str, Quantity]]]):
    root: Optional[Dict[str, Quantity]] = None


class EksSecret(BaseModel):
    optional: Optional[Boolean] = None
    secretName: String


class EksVolume(BaseModel):
    emptyDir: Optional[EksEmptyDir] = None
    hostPath: Optional[EksHostPath] = None
    name: String
    secret: Optional[EksSecret] = None


class EksVolumes(RootModel[List[EksVolume]]):
    root: List[EksVolume]


class EphemeralStorage(BaseModel):
    sizeInGiB: Integer


class EvaluateOnExit(BaseModel):
    action: RetryAction
    onExitCode: Optional[String] = None
    onReason: Optional[String] = None
    onStatusReason: Optional[String] = None


class EvaluateOnExitList(RootModel[List[EvaluateOnExit]]):
    root: List[EvaluateOnExit]


class FargatePlatformConfiguration(BaseModel):
    platformVersion: Optional[String] = None


class Host(BaseModel):
    sourcePath: Optional[String] = None


class JobDependency(BaseModel):
    jobId: Optional[String] = None
    type: Optional[ArrayJobDependency] = None


class JobDependencyList(RootModel[List[JobDependency]]):
    root: List[JobDependency]


class JobQueueDetail(BaseModel):
    computeEnvironmentOrder: ComputeEnvironmentOrders
    jobQueueArn: String
    jobQueueName: String
    priority: Integer
    schedulingPolicyArn: Optional[String] = None
    state: JQState
    status: Optional[JQStatus] = None
    statusReason: Optional[String] = None
    tags: Optional[TagrisTagsMap] = None


class JobQueueDetailList(RootModel[List[JobQueueDetail]]):
    root: List[JobQueueDetail]


class JobSummary(BaseModel):
    arrayProperties: Optional[ArrayPropertiesSummary] = None
    container: Optional[ContainerSummary] = None
    createdAt: Optional[Long] = None
    jobArn: Optional[String] = None
    jobDefinition: Optional[String] = None
    jobId: String
    jobName: String
    nodeProperties: Optional[NodePropertiesSummary] = None
    startedAt: Optional[Long] = None
    status: Optional[JobStatus] = None
    statusReason: Optional[String] = None
    stoppedAt: Optional[Long] = None


class JobSummaryList(RootModel[List[JobSummary]]):
    root: List[JobSummary]


class KeyValuePair(BaseModel):
    name: Optional[String] = None
    value: Optional[String] = None


class KeyValuesPair(BaseModel):
    name: Optional[String] = None
    values: Optional[StringList] = None


class LaunchTemplateSpecification(BaseModel):
    launchTemplateId: Optional[String] = None
    launchTemplateName: Optional[String] = None
    version: Optional[String] = None


class LinuxParameters(BaseModel):
    devices: Optional[DevicesList] = None
    initProcessEnabled: Optional[Boolean] = None
    maxSwap: Optional[Integer] = None
    sharedMemorySize: Optional[Integer] = None
    swappiness: Optional[Integer] = None
    tmpfs: Optional[TmpfsList] = None


class ListJobsFilterList(RootModel[List[KeyValuesPair]]):
    root: List[KeyValuesPair]


class ListJobsRequest(BaseModel):
    arrayJobId: Optional[String] = None
    filters: Optional[ListJobsFilterList] = None
    jobQueue: Optional[String] = None
    jobStatus: Optional[JobStatus] = None
    maxResults: Optional[Integer] = None
    multiNodeJobId: Optional[String] = None
    nextToken: Optional[String] = None


class ListJobsResponse(BaseModel):
    jobSummaryList: JobSummaryList
    nextToken: Optional[String] = None


class ListSchedulingPoliciesRequest(BaseModel):
    maxResults: Optional[Integer] = None
    nextToken: Optional[String] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagrisTagsMap] = None


class LogConfigurationOptionsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class MountPoint(BaseModel):
    containerPath: Optional[String] = None
    readOnly: Optional[Boolean] = None
    sourceVolume: Optional[String] = None


class MountPoints(RootModel[List[MountPoint]]):
    root: List[MountPoint]


class NetworkInterface(BaseModel):
    attachmentId: Optional[String] = None
    ipv6Address: Optional[String] = None
    privateIpv4Address: Optional[String] = None


class NetworkInterfaceList(RootModel[List[NetworkInterface]]):
    root: List[NetworkInterface]


class ParametersMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class RegisterJobDefinitionResponse(BaseModel):
    jobDefinitionArn: String
    jobDefinitionName: String
    revision: Integer


class ResourceRequirement(BaseModel):
    type: ResourceType
    value: String


class ResourceRequirements(RootModel[List[ResourceRequirement]]):
    root: List[ResourceRequirement]


class RetryStrategy(BaseModel):
    attempts: Optional[Integer] = None
    evaluateOnExit: Optional[EvaluateOnExitList] = None


class SchedulingPolicyListingDetail(BaseModel):
    arn: String


class SchedulingPolicyListingDetailList(RootModel[List[SchedulingPolicyListingDetail]]):
    root: List[SchedulingPolicyListingDetail]


class Secret(BaseModel):
    name: String
    valueFrom: String


class SecretList(RootModel[List[Secret]]):
    root: List[Secret]


class ShareAttributes(BaseModel):
    shareIdentifier: String
    weightFactor: Optional[Float] = None


class ShareAttributesList(RootModel[List[ShareAttributes]]):
    root: List[ShareAttributes]


class TagResourceRequest(BaseModel):
    tags: TagrisTagsMap


class UpdateJobQueueRequest(BaseModel):
    computeEnvironmentOrder: Optional[ComputeEnvironmentOrders] = None
    jobQueue: String
    priority: Optional[Integer] = None
    schedulingPolicyArn: Optional[String] = None
    state: Optional[JQState] = None


class Volume(BaseModel):
    efsVolumeConfiguration: Optional[EFSVolumeConfiguration] = None
    host: Optional[Host] = None
    name: Optional[String] = None


class Volumes(RootModel[List[Volume]]):
    root: List[Volume]


class ComputeResources(BaseModel):
    allocationStrategy: Optional[CRAllocationStrategy] = None
    bidPercentage: Optional[Integer] = None
    desiredvCpus: Optional[Integer] = None
    ec2Configuration: Optional[Ec2ConfigurationList] = None
    ec2KeyPair: Optional[String] = None
    imageId: Optional[String] = None
    instanceRole: Optional[String] = None
    instanceTypes: Optional[StringList] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    maxvCpus: Optional[Integer] = None
    minvCpus: Optional[Integer] = None
    placementGroup: Optional[String] = None
    securityGroupIds: Optional[StringList] = None
    spotIamFleetRole: Optional[String] = None
    subnets: Optional[StringList] = None
    tags: Optional[TagsMap] = None
    type: Optional[CRType] = None


class V1CreatecomputeenvironmentPostRequest(BaseModel):
    computeEnvironmentName: str = Field(
        ...,
        description='The name for your compute environment. It can be up to 128 characters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).',
    )
    computeResources: Optional[ComputeResources] = Field(
        None,
        description='An object that represents an Batch compute resource. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute environments</a> in the <i>Batch User Guide</i>.',
    )
    eksConfiguration: Optional[EksConfiguration1] = Field(
        None,
        description='Configuration for the Amazon EKS cluster that supports the Batch compute environment. The cluster must exist before the compute environment can be created.',
    )
    serviceRole: Optional[str] = Field(
        None,
        description='<p>The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls to other Amazon Web Services services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch service IAM role</a> in the <i>Batch User Guide</i>.</p> <important> <p>If your account already created the Batch service-linked role, that role is used by default for your compute environment unless you specify a different role here. If the Batch service-linked role doesn\'t exist in your account, and no role is specified here, the service attempts to create the Batch service-linked role in your account.</p> </important> <p>If your specified role has a path other than <code>/</code>, then you must specify either the full role ARN (recommended) or prefix the role name with the path. For example, if a role with the name <code>bar</code> has a path of <code>/foo/</code>, specify <code>/foo/bar</code> as the role name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly names and paths</a> in the <i>IAM User Guide</i>.</p> <note> <p>Depending on how you created your Batch service role, its ARN might contain the <code>service-role</code> path prefix. When you only specify the name of the service role, Batch assumes that your ARN doesn\'t use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>',
    )
    state: Optional[State] = Field(
        None,
        description='<p>The state of the compute environment. If the state is <code>ENABLED</code>, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.</p> <p>If the state is <code>ENABLED</code>, then the Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.</p> <p>If the state is <code>DISABLED</code>, then the Batch scheduler doesn\'t attempt to place jobs within the environment. Jobs in a <code>STARTING</code> or <code>RUNNING</code> state continue to progress normally. Managed compute environments in the <code>DISABLED</code> state don\'t scale out. </p> <note> <p>Compute environments in a <code>DISABLED</code> state may continue to incur billing charges. To prevent additional charges, turn off and then delete the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a> in the <i>Batch User Guide</i>.</p> </note> <p>When an instance is idle, the instance scales down to the <code>minvCpus</code> value. However, the instance size doesn\'t change. For example, consider a <code>c5.8xlarge</code> instance with a <code>minvCpus</code> value of <code>4</code> and a <code>desiredvCpus</code> value of <code>36</code>. This instance doesn\'t scale down to a <code>c5.large</code> instance.</p>',
    )
    tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='<p>The tags that you apply to the compute environment to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.</p> <p>These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a> and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a> API operations. These tags don\'t propagate to the underlying compute resources.</p>',
    )
    type: Type = Field(
        ...,
        description='The type of the compute environment: <code>MANAGED</code> or <code>UNMANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute Environments</a> in the <i>Batch User Guide</i>.',
    )
    unmanagedvCpus: Optional[int] = Field(
        None,
        description="<p>The maximum number of vCPUs for an unmanaged compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.</p> <note> <p>This parameter is only supported when the <code>type</code> parameter is set to <code>UNMANAGED</code>.</p> </note>",
    )


class V1CreatejobqueuePostRequest(BaseModel):
    computeEnvironmentOrder: List[ComputeEnvironmentOrder] = Field(
        ...,
        description="<p>The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. You can associate up to three compute environments with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>",
    )
    jobQueueName: str = Field(
        ...,
        description='The name of the job queue. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).',
    )
    priority: int = Field(
        ...,
        description="The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and Fargate compute environments can't be mixed.",
    )
    schedulingPolicyArn: Optional[str] = Field(
        None,
        description="The Amazon Resource Name (ARN) of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. An example is <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.",
    )
    state: Optional[State] = Field(
        None,
        description="The state of the job queue. If the job queue state is <code>ENABLED</code>, it is able to accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.",
    )
    tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='The tags that you apply to the job queue to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging your Batch resources</a> in <i>Batch User Guide</i>.',
    )


class FairsharePolicy(BaseModel):
    computeReservation: Optional[Integer] = None
    shareDecaySeconds: Optional[Integer] = None
    shareDistribution: Optional[ShareAttributesList] = None


class V1CreateschedulingpolicyPostRequest(BaseModel):
    fairsharePolicy: Optional[FairsharePolicy] = Field(
        None, description='The fair share policy for a scheduling policy.'
    )
    name: str = Field(
        ...,
        description='The name of the scheduling policy. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).',
    )
    tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='<p>The tags that you apply to the scheduling policy to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.</p> <p>These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a> and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a> API operations.</p>',
    )


class V1ListjobsPostRequest(BaseModel):
    arrayJobId: Optional[str] = Field(
        None,
        description='The job ID for an array job. Specifying an array job ID with this parameter lists all child jobs from within the specified array.',
    )
    filters: Optional[List[KeyValuesPair]] = Field(
        None,
        description="<p>The filter to apply to the query. Only one filter can be used at a time. When the filter is used, <code>jobStatus</code> is ignored. The filter doesn't apply to child jobs in an array or multi-node parallel (MNP) jobs. The results are sorted by the <code>createdAt</code> field, with the most recent jobs being first.</p> <dl> <dt>JOB_NAME</dt> <dd> <p>The value of the filter is a case-insensitive match for the job name. If the value ends with an asterisk (*), the filter matches any job name that begins with the string before the '*'. This corresponds to the <code>jobName</code> value. For example, <code>test1</code> matches both <code>Test1</code> and <code>test1</code>, and <code>test1*</code> matches both <code>test1</code> and <code>Test10</code>. When the <code>JOB_NAME</code> filter is used, the results are grouped by the job name and version.</p> </dd> <dt>JOB_DEFINITION</dt> <dd> <p>The value for the filter is the name or Amazon Resource Name (ARN) of the job definition. This corresponds to the <code>jobDefinition</code> value. The value is case sensitive. When the value for the filter is the job definition name, the results include all the jobs that used any revision of that job definition name. If the value ends with an asterisk (*), the filter matches any job definition name that begins with the string before the '*'. For example, <code>jd1</code> matches only <code>jd1</code>, and <code>jd1*</code> matches both <code>jd1</code> and <code>jd1A</code>. The version of the job definition that's used doesn't affect the sort order. When the <code>JOB_DEFINITION</code> filter is used and the ARN is used (which is in the form <code>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</code>), the results include jobs that used the specified revision of the job definition. Asterisk (*) isn't supported when the ARN is used.</p> </dd> <dt>BEFORE_CREATED_AT</dt> <dd> <p>The value for the filter is the time that's before the job was created. This corresponds to the <code>createdAt</code> value. The value is a string representation of the number of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.</p> </dd> <dt>AFTER_CREATED_AT</dt> <dd> <p>The value for the filter is the time that's after the job was created. This corresponds to the <code>createdAt</code> value. The value is a string representation of the number of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.</p> </dd> </dl>",
    )
    jobQueue: Optional[str] = Field(
        None,
        description='The name or full Amazon Resource Name (ARN) of the job queue used to list jobs.',
    )
    jobStatus: Optional[JobStatus] = Field(
        None,
        description="The job status used to filter jobs in the specified queue. If the <code>filters</code> parameter is specified, the <code>jobStatus</code> parameter is ignored and jobs with any status are returned. If you don't specify a status, only <code>RUNNING</code> jobs are returned.",
    )
    maxResults: Optional[int] = Field(
        None,
        description="The maximum number of results returned by <code>ListJobs</code> in paginated output. When this parameter is used, <code>ListJobs</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>ListJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
    )
    multiNodeJobId: Optional[str] = Field(
        None,
        description='The job ID for a multi-node parallel job. Specifying a multi-node parallel job ID with this parameter lists all nodes that are associated with the specified job.',
    )
    nextToken: Optional[str] = Field(
        None,
        description="<p>The <code>nextToken</code> value returned from a previous paginated <code>ListJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
    )


class ComputeResources1(BaseModel):
    allocationStrategy: Optional[CRUpdateAllocationStrategy] = None
    bidPercentage: Optional[Integer] = None
    desiredvCpus: Optional[Integer] = None
    ec2Configuration: Optional[Ec2ConfigurationList] = None
    ec2KeyPair: Optional[String] = None
    imageId: Optional[String] = None
    instanceRole: Optional[String] = None
    instanceTypes: Optional[StringList] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    maxvCpus: Optional[Integer] = None
    minvCpus: Optional[Integer] = None
    placementGroup: Optional[String] = None
    securityGroupIds: Optional[StringList] = None
    subnets: Optional[StringList] = None
    tags: Optional[TagsMap] = None
    type: Optional[CRType] = None
    updateToLatestImageVersion: Optional[Boolean] = None


class V1UpdatecomputeenvironmentPostRequest(BaseModel):
    computeEnvironment: str = Field(
        ...,
        description='The name or full Amazon Resource Name (ARN) of the compute environment to update.',
    )
    computeResources: Optional[ComputeResources1] = Field(
        None,
        description='An object that represents the attributes of a compute environment that can be updated. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.',
    )
    serviceRole: Optional[str] = Field(
        None,
        description='<p>The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls to other Amazon Web Services services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch service IAM role</a> in the <i>Batch User Guide</i>.</p> <important> <p>If the compute environment has a service-linked role, it can\'t be changed to use a regular IAM role. Likewise, if the compute environment has a regular IAM role, it can\'t be changed to use a service-linked role. To update the parameters for the compute environment that require an infrastructure update to change, the <b>AWSServiceRoleForBatch</b> service-linked role must be used. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.</p> </important> <p>If your specified role has a path other than <code>/</code>, then you must either specify the full role ARN (recommended) or prefix the role name with the path.</p> <note> <p>Depending on how you created your Batch service role, its ARN might contain the <code>service-role</code> path prefix. When you only specify the name of the service role, Batch assumes that your ARN doesn\'t use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>',
    )
    state: Optional[State] = Field(
        None,
        description='<p>The state of the compute environment. Compute environments in the <code>ENABLED</code> state can accept jobs from a queue and scale in or out automatically based on the workload demand of its associated queues.</p> <p>If the state is <code>ENABLED</code>, then the Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.</p> <p>If the state is <code>DISABLED</code>, then the Batch scheduler doesn\'t attempt to place jobs within the environment. Jobs in a <code>STARTING</code> or <code>RUNNING</code> state continue to progress normally. Managed compute environments in the <code>DISABLED</code> state don\'t scale out. </p> <note> <p>Compute environments in a <code>DISABLED</code> state may continue to incur billing charges. To prevent additional charges, turn off and then delete the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a> in the <i>Batch User Guide</i>.</p> </note> <p>When an instance is idle, the instance scales down to the <code>minvCpus</code> value. However, the instance size doesn\'t change. For example, consider a <code>c5.8xlarge</code> instance with a <code>minvCpus</code> value of <code>4</code> and a <code>desiredvCpus</code> value of <code>36</code>. This instance doesn\'t scale down to a <code>c5.large</code> instance.</p>',
    )
    unmanagedvCpus: Optional[int] = Field(
        None,
        description="The maximum number of vCPUs expected to be used for an unmanaged compute environment. Don't specify this parameter for a managed compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.",
    )
    updatePolicy: Optional[UpdatePolicy] = Field(
        None,
        description='Specifies the infrastructure update policy for the compute environment. For more information about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.',
    )


class V1UpdatejobqueuePostRequest(BaseModel):
    computeEnvironmentOrder: Optional[List[ComputeEnvironmentOrder]] = Field(
        None,
        description="<p>Details the set of compute environments mapped to a job queue and their order relative to each other. This is one of the parameters used by the job scheduler to determine which compute environment runs a given job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>",
    )
    jobQueue: str = Field(
        ..., description='The name or the Amazon Resource Name (ARN) of the job queue.'
    )
    priority: Optional[int] = Field(
        None,
        description="The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.",
    )
    schedulingPolicyArn: Optional[str] = Field(
        None,
        description='Amazon Resource Name (ARN) of the fair share scheduling policy. Once a job queue is created, the fair share scheduling policy can be replaced but not removed. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. For example, <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.',
    )
    state: Optional[State] = Field(
        None,
        description="Describes the queue's ability to accept new jobs. If the job queue state is <code>ENABLED</code>, it can accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.",
    )


class V1UpdateschedulingpolicyPostRequest(BaseModel):
    arn: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the scheduling policy to update.',
    )
    fairsharePolicy: Optional[FairsharePolicy] = Field(
        None, description='The fair share policy for a scheduling policy.'
    )


class AttemptContainerDetail(BaseModel):
    containerInstanceArn: Optional[String] = None
    exitCode: Optional[Integer] = None
    logStreamName: Optional[String] = None
    networkInterfaces: Optional[NetworkInterfaceList] = None
    reason: Optional[String] = None
    taskArn: Optional[String] = None


class AttemptDetail(BaseModel):
    container: Optional[AttemptContainerDetail] = None
    startedAt: Optional[Long] = None
    statusReason: Optional[String] = None
    stoppedAt: Optional[Long] = None


class AttemptDetails(RootModel[List[AttemptDetail]]):
    root: List[AttemptDetail]


class ComputeResource(BaseModel):
    allocationStrategy: Optional[CRAllocationStrategy] = None
    bidPercentage: Optional[Integer] = None
    desiredvCpus: Optional[Integer] = None
    ec2Configuration: Optional[Ec2ConfigurationList] = None
    ec2KeyPair: Optional[String] = None
    imageId: Optional[String] = None
    instanceRole: Optional[String] = None
    instanceTypes: Optional[StringList] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    maxvCpus: Integer
    minvCpus: Optional[Integer] = None
    placementGroup: Optional[String] = None
    securityGroupIds: Optional[StringList] = None
    spotIamFleetRole: Optional[String] = None
    subnets: StringList
    tags: Optional[TagsMap] = None
    type: CRType


class ComputeResourceUpdate(BaseModel):
    allocationStrategy: Optional[CRUpdateAllocationStrategy] = None
    bidPercentage: Optional[Integer] = None
    desiredvCpus: Optional[Integer] = None
    ec2Configuration: Optional[Ec2ConfigurationList] = None
    ec2KeyPair: Optional[String] = None
    imageId: Optional[String] = None
    instanceRole: Optional[String] = None
    instanceTypes: Optional[StringList] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    maxvCpus: Optional[Integer] = None
    minvCpus: Optional[Integer] = None
    placementGroup: Optional[String] = None
    securityGroupIds: Optional[StringList] = None
    subnets: Optional[StringList] = None
    tags: Optional[TagsMap] = None
    type: Optional[CRType] = None
    updateToLatestImageVersion: Optional[Boolean] = None


class CreateComputeEnvironmentRequest(BaseModel):
    computeEnvironmentName: String
    computeResources: Optional[ComputeResource] = None
    eksConfiguration: Optional[EksConfiguration] = None
    serviceRole: Optional[String] = None
    state: Optional[CEState] = None
    tags: Optional[TagrisTagsMap] = None
    type: CEType
    unmanagedvCpus: Optional[Integer] = None


class DescribeJobQueuesResponse(BaseModel):
    jobQueues: Optional[JobQueueDetailList] = None
    nextToken: Optional[String] = None


class EksContainerResourceRequirements(BaseModel):
    limits: Optional[EksLimits] = None
    requests: Optional[EksRequests] = None


class EnvironmentVariables(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class ListSchedulingPoliciesResponse(BaseModel):
    nextToken: Optional[String] = None
    schedulingPolicies: Optional[SchedulingPolicyListingDetailList] = None


class LogConfiguration(BaseModel):
    logDriver: LogDriver
    options: Optional[LogConfigurationOptionsMap] = None
    secretOptions: Optional[SecretList] = None


class SchedulingPolicyDetail(BaseModel):
    arn: String
    fairsharePolicy: Optional[FairsharePolicy] = None
    name: String
    tags: Optional[TagrisTagsMap] = None


class SchedulingPolicyDetailList(RootModel[List[SchedulingPolicyDetail]]):
    root: List[SchedulingPolicyDetail]


class UpdateComputeEnvironmentRequest(BaseModel):
    computeEnvironment: String
    computeResources: Optional[ComputeResourceUpdate] = None
    serviceRole: Optional[String] = None
    state: Optional[CEState] = None
    unmanagedvCpus: Optional[Integer] = None
    updatePolicy: Optional[UpdatePolicy] = None


class UpdateSchedulingPolicyRequest(BaseModel):
    arn: String
    fairsharePolicy: Optional[FairsharePolicy] = None


class ContainerProperties(BaseModel):
    command: Optional[StringList] = None
    environment: Optional[EnvironmentVariables] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionRoleArn: Optional[String] = None
    fargatePlatformConfiguration: Optional[FargatePlatformConfiguration] = None
    image: Optional[String] = None
    instanceType: Optional[String] = None
    jobRoleArn: Optional[String] = None
    linuxParameters: Optional[LinuxParameters] = None
    logConfiguration: Optional[LogConfiguration] = None
    memory: Optional[Integer] = None
    mountPoints: Optional[MountPoints] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    privileged: Optional[Boolean] = None
    readonlyRootFilesystem: Optional[Boolean] = None
    resourceRequirements: Optional[ResourceRequirements] = None
    secrets: Optional[SecretList] = None
    ulimits: Optional[Ulimits] = None
    user: Optional[String] = None
    vcpus: Optional[Integer] = None
    volumes: Optional[Volumes] = None


class ContainerOverrides(BaseModel):
    command: Optional[StringList] = None
    environment: Optional[EnvironmentVariables] = None
    instanceType: Optional[String] = None
    memory: Optional[Integer] = None
    resourceRequirements: Optional[ResourceRequirements] = None
    vcpus: Optional[Integer] = None


class ComputeEnvironmentDetail(BaseModel):
    computeEnvironmentArn: String
    computeEnvironmentName: String
    computeResources: Optional[ComputeResource] = None
    containerOrchestrationType: Optional[OrchestrationType] = None
    ecsClusterArn: Optional[String] = None
    eksConfiguration: Optional[EksConfiguration] = None
    serviceRole: Optional[String] = None
    state: Optional[CEState] = None
    status: Optional[CEStatus] = None
    statusReason: Optional[String] = None
    tags: Optional[TagrisTagsMap] = None
    type: Optional[CEType] = None
    unmanagedvCpus: Optional[Integer] = None
    updatePolicy: Optional[UpdatePolicy] = None
    uuid: Optional[String] = None


class ComputeEnvironmentDetailList(RootModel[List[ComputeEnvironmentDetail]]):
    root: List[ComputeEnvironmentDetail]


class ContainerDetail(BaseModel):
    command: Optional[StringList] = None
    containerInstanceArn: Optional[String] = None
    environment: Optional[EnvironmentVariables] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionRoleArn: Optional[String] = None
    exitCode: Optional[Integer] = None
    fargatePlatformConfiguration: Optional[FargatePlatformConfiguration] = None
    image: Optional[String] = None
    instanceType: Optional[String] = None
    jobRoleArn: Optional[String] = None
    linuxParameters: Optional[LinuxParameters] = None
    logConfiguration: Optional[LogConfiguration] = None
    logStreamName: Optional[String] = None
    memory: Optional[Integer] = None
    mountPoints: Optional[MountPoints] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    networkInterfaces: Optional[NetworkInterfaceList] = None
    privileged: Optional[Boolean] = None
    readonlyRootFilesystem: Optional[Boolean] = None
    reason: Optional[String] = None
    resourceRequirements: Optional[ResourceRequirements] = None
    secrets: Optional[SecretList] = None
    taskArn: Optional[String] = None
    ulimits: Optional[Ulimits] = None
    user: Optional[String] = None
    vcpus: Optional[Integer] = None
    volumes: Optional[Volumes] = None


class CreateSchedulingPolicyRequest(BaseModel):
    fairsharePolicy: Optional[FairsharePolicy] = None
    name: String
    tags: Optional[TagrisTagsMap] = None


class DescribeComputeEnvironmentsResponse(BaseModel):
    computeEnvironments: Optional[ComputeEnvironmentDetailList] = None
    nextToken: Optional[String] = None


class DescribeSchedulingPoliciesResponse(BaseModel):
    schedulingPolicies: Optional[SchedulingPolicyDetailList] = None


class EksContainer(BaseModel):
    args: Optional[StringList] = None
    command: Optional[StringList] = None
    env: Optional[EksContainerEnvironmentVariables] = None
    image: String
    imagePullPolicy: Optional[String] = None
    name: Optional[String] = None
    resources: Optional[EksContainerResourceRequirements] = None
    securityContext: Optional[EksContainerSecurityContext] = None
    volumeMounts: Optional[EksContainerVolumeMounts] = None


class EksContainerDetail(BaseModel):
    args: Optional[StringList] = None
    command: Optional[StringList] = None
    env: Optional[EksContainerEnvironmentVariables] = None
    exitCode: Optional[Integer] = None
    image: Optional[String] = None
    imagePullPolicy: Optional[String] = None
    name: Optional[String] = None
    reason: Optional[String] = None
    resources: Optional[EksContainerResourceRequirements] = None
    securityContext: Optional[EksContainerSecurityContext] = None
    volumeMounts: Optional[EksContainerVolumeMounts] = None


class EksContainerDetails(RootModel[List[EksContainerDetail]]):
    root: List[EksContainerDetail]


class EksContainerOverride(BaseModel):
    args: Optional[StringList] = None
    command: Optional[StringList] = None
    env: Optional[EksContainerEnvironmentVariables] = None
    image: Optional[String] = None
    resources: Optional[EksContainerResourceRequirements] = None


class EksContainerOverrideList(RootModel[List[EksContainerOverride]]):
    root: List[EksContainerOverride]


class EksContainers(RootModel[List[EksContainer]]):
    root: List[EksContainer]


class EksPodProperties(BaseModel):
    containers: Optional[EksContainers] = None
    dnsPolicy: Optional[String] = None
    hostNetwork: Optional[Boolean] = None
    metadata: Optional[EksMetadata] = None
    serviceAccountName: Optional[String] = None
    volumes: Optional[EksVolumes] = None


class EksPodPropertiesDetail(BaseModel):
    containers: Optional[EksContainerDetails] = None
    dnsPolicy: Optional[String] = None
    hostNetwork: Optional[Boolean] = None
    metadata: Optional[EksMetadata] = None
    nodeName: Optional[String] = None
    podName: Optional[String] = None
    serviceAccountName: Optional[String] = None
    volumes: Optional[EksVolumes] = None


class EksPodPropertiesOverride(BaseModel):
    containers: Optional[EksContainerOverrideList] = None
    metadata: Optional[EksMetadata] = None


class EksProperties(BaseModel):
    podProperties: Optional[EksPodProperties] = None


class EksPropertiesDetail(BaseModel):
    podProperties: Optional[EksPodPropertiesDetail] = None


class EksPropertiesOverride(BaseModel):
    podProperties: Optional[EksPodPropertiesOverride] = None


class NodePropertyOverride(BaseModel):
    containerOverrides: Optional[ContainerOverrides] = None
    targetNodes: String


class NodePropertyOverrides(RootModel[List[NodePropertyOverride]]):
    root: List[NodePropertyOverride]


class NodeRangeProperty(BaseModel):
    container: Optional[ContainerProperties] = None
    targetNodes: String


class NodeOverrides(BaseModel):
    nodePropertyOverrides: Optional[NodePropertyOverrides] = None
    numNodes: Optional[Integer] = None


class V1SubmitjobPostRequest(BaseModel):
    arrayProperties: Optional[ArrayProperties] = Field(
        None, description='An object that represents an Batch array job.'
    )
    containerOverrides: Optional[ContainerOverrides] = Field(
        None, description='The overrides that should be sent to a container.'
    )
    dependsOn: Optional[List[JobDependency]] = Field(
        None,
        description='A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a <code>SEQUENTIAL</code> type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an <code>N_TO_N</code> type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin.',
    )
    eksPropertiesOverride: Optional[EksPropertiesOverride] = Field(
        None,
        description='An object that contains overrides for the Kubernetes resources of a job.',
    )
    jobDefinition: str = Field(
        ...,
        description='<p>The job definition used by this job. This value can be one of <code>definition-name</code>, <code>definition-name:revision</code>, or the Amazon Resource Name (ARN) for the job definition, with or without the revision (<code>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i>:<i>revision</i> </code>, or <code>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i> </code>).</p> <p>If the revision is not specified, then the latest active revision is used.</p>',
    )
    jobName: str = Field(
        ...,
        description='The name of the job. It can be up to 128 letters long. The first character must be alphanumeric, can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).',
    )
    jobQueue: str = Field(
        ...,
        description='The job queue where the job is submitted. You can specify either the name or the Amazon Resource Name (ARN) of the queue.',
    )
    nodeOverrides: Optional[NodeOverrides] = Field(
        None,
        description="<p>An object that represents any node overrides to a job definition that's used in a <a>SubmitJob</a> API operation.</p> <note> <p>This parameter isn't applicable to jobs that are running on Fargate resources. Don't provide it for these jobs. Rather, use <code>containerOverrides</code> instead.</p> </note>",
    )
    parameters: Optional[Dict[str, String]] = Field(
        None,
        description='Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.',
    )
    propagateTags: Optional[bool] = Field(
        None,
        description="Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the <code>FAILED</code> state. When specified, this overrides the tag propagation setting in the job definition.",
    )
    retryStrategy: Optional[RetryStrategy] = Field(
        None,
        description='The retry strategy that\'s associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated job retries</a> in the <i>Batch User Guide</i>.',
    )
    schedulingPriorityOverride: Optional[int] = Field(
        None,
        description='<p>The scheduling priority for the job. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. This overrides any scheduling priority in the job definition.</p> <p>The minimum supported value is 0 and the maximum supported value is 9999.</p>',
    )
    shareIdentifier: Optional[str] = Field(
        None,
        description="The share identifier for the job. If the job queue doesn't have a scheduling policy, then this parameter must not be specified. If the job queue has a scheduling policy, then this parameter must be specified.",
    )
    tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='The tags that you apply to the job request to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.',
    )
    timeout: Optional[Timeout] = Field(
        None, description='An object that represents a job timeout configuration.'
    )


class NodeRangeProperties(RootModel[List[NodeRangeProperty]]):
    root: List[NodeRangeProperty]


class SubmitJobRequest(BaseModel):
    arrayProperties: Optional[ArrayProperties] = None
    containerOverrides: Optional[ContainerOverrides] = None
    dependsOn: Optional[JobDependencyList] = None
    eksPropertiesOverride: Optional[EksPropertiesOverride] = None
    jobDefinition: String
    jobName: String
    jobQueue: String
    nodeOverrides: Optional[NodeOverrides] = None
    parameters: Optional[ParametersMap] = None
    propagateTags: Optional[Boolean] = None
    retryStrategy: Optional[RetryStrategy] = None
    schedulingPriorityOverride: Optional[Integer] = None
    shareIdentifier: Optional[String] = None
    tags: Optional[TagrisTagsMap] = None
    timeout: Optional[JobTimeout] = None


class NodeProperties1(BaseModel):
    mainNode: Optional[Integer] = None
    nodeRangeProperties: Optional[NodeRangeProperties] = None
    numNodes: Optional[Integer] = None


class V1RegisterjobdefinitionPostRequest(BaseModel):
    containerProperties: Optional[ContainerProperties] = Field(
        None,
        description="Container properties are used for Amazon ECS based job definitions. These properties to describe the container that's launched as part of a job.",
    )
    eksProperties: Optional[EksProperties] = Field(
        None,
        description='An object that contains the properties for the Kubernetes resources of a job.',
    )
    jobDefinitionName: str = Field(
        ...,
        description='The name of the job definition to register. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).',
    )
    nodeProperties: Optional[NodeProperties1] = Field(
        None,
        description="<p>An object that represents the node properties of a multi-node parallel job.</p> <note> <p>Node properties can't be specified for Amazon EKS based job definitions.</p> </note>",
    )
    parameters: Optional[Dict[str, String]] = Field(
        None,
        description='Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.',
    )
    platformCapabilities: Optional[List[PlatformCapability]] = Field(
        None,
        description='<p>The platform capabilities required by the job definition. If no value is specified, it defaults to <code>EC2</code>. To run the job on Fargate resources, specify <code>FARGATE</code>.</p> <note> <p>If the job runs on Amazon EKS resources, then you must not specify <code>platformCapabilities</code>.</p> </note>',
    )
    propagateTags: Optional[bool] = Field(
        None,
        description='<p>Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the <code>FAILED</code> state.</p> <note> <p>If the job runs on Amazon EKS resources, then you must not specify <code>propagateTags</code>.</p> </note>',
    )
    retryStrategy: Optional[RetryStrategy] = Field(
        None,
        description='The retry strategy that\'s associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated job retries</a> in the <i>Batch User Guide</i>.',
    )
    schedulingPriority: Optional[int] = Field(
        None,
        description='<p>The scheduling priority for jobs that are submitted with this job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority.</p> <p>The minimum supported value is 0 and the maximum supported value is 9999.</p>',
    )
    tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='The tags that you apply to the job definition to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging Amazon Web Services Resources</a> in <i>Batch User Guide</i>.',
    )
    timeout: Optional[Timeout] = Field(
        None, description='An object that represents a job timeout configuration.'
    )
    type: Type1 = Field(
        ...,
        description='<p>The type of job definition. For more information about multi-node parallel jobs, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html">Creating a multi-node parallel job definition</a> in the <i>Batch User Guide</i>.</p> <note> <p>If the job is run on Fargate resources, then <code>multinode</code> isn\'t supported.</p> </note>',
    )


class NodeProperties(BaseModel):
    mainNode: Integer
    nodeRangeProperties: NodeRangeProperties
    numNodes: Integer


class RegisterJobDefinitionRequest(BaseModel):
    containerProperties: Optional[ContainerProperties] = None
    eksProperties: Optional[EksProperties] = None
    jobDefinitionName: String
    nodeProperties: Optional[NodeProperties] = None
    parameters: Optional[ParametersMap] = None
    platformCapabilities: Optional[PlatformCapabilityList] = None
    propagateTags: Optional[Boolean] = None
    retryStrategy: Optional[RetryStrategy] = None
    schedulingPriority: Optional[Integer] = None
    tags: Optional[TagrisTagsMap] = None
    timeout: Optional[JobTimeout] = None
    type: JobDefinitionType


class JobDefinition(BaseModel):
    containerOrchestrationType: Optional[OrchestrationType] = None
    containerProperties: Optional[ContainerProperties] = None
    eksProperties: Optional[EksProperties] = None
    jobDefinitionArn: String
    jobDefinitionName: String
    nodeProperties: Optional[NodeProperties] = None
    parameters: Optional[ParametersMap] = None
    platformCapabilities: Optional[PlatformCapabilityList] = None
    propagateTags: Optional[Boolean] = None
    retryStrategy: Optional[RetryStrategy] = None
    revision: Integer
    schedulingPriority: Optional[Integer] = None
    status: Optional[String] = None
    tags: Optional[TagrisTagsMap] = None
    timeout: Optional[JobTimeout] = None
    type: String


class JobDefinitionList(RootModel[List[JobDefinition]]):
    root: List[JobDefinition]


class JobDetail(BaseModel):
    arrayProperties: Optional[ArrayPropertiesDetail] = None
    attempts: Optional[AttemptDetails] = None
    container: Optional[ContainerDetail] = None
    createdAt: Optional[Long] = None
    dependsOn: Optional[JobDependencyList] = None
    eksAttempts: Optional[EksAttemptDetails] = None
    eksProperties: Optional[EksPropertiesDetail] = None
    isCancelled: Optional[Boolean] = None
    isTerminated: Optional[Boolean] = None
    jobArn: Optional[String] = None
    jobDefinition: String
    jobId: String
    jobName: String
    jobQueue: String
    nodeDetails: Optional[NodeDetails] = None
    nodeProperties: Optional[NodeProperties] = None
    parameters: Optional[ParametersMap] = None
    platformCapabilities: Optional[PlatformCapabilityList] = None
    propagateTags: Optional[Boolean] = None
    retryStrategy: Optional[RetryStrategy] = None
    schedulingPriority: Optional[Integer] = None
    shareIdentifier: Optional[String] = None
    startedAt: Long
    status: JobStatus
    statusReason: Optional[String] = None
    stoppedAt: Optional[Long] = None
    tags: Optional[TagrisTagsMap] = None
    timeout: Optional[JobTimeout] = None


class JobDetailList(RootModel[List[JobDetail]]):
    root: List[JobDetail]


class DescribeJobDefinitionsResponse(BaseModel):
    jobDefinitions: Optional[JobDefinitionList] = None
    nextToken: Optional[String] = None


class DescribeJobsResponse(BaseModel):
    jobs: Optional[JobDetailList] = None
